name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  MIX_ENV: test
  ImageOS: ubuntu22

jobs:
  lint:
    name: Setup and Lint
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17'
        otp-version: '26'
      env:
        ImageOS: ubuntu22
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Set up Postgres
      run: |
        sudo service postgresql start
        sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'postgres';"
        sudo -u postgres psql -c "DROP DATABASE IF EXISTS permit_test;"
    - name: Install dependencies
      run: mix deps.get
      env:
        LIVE_VIEW_VERSION: '0.20.17'
        PHOENIX_VERSION: '1.7.21'
    - name: Create DB
      run: mix do ecto.create, ecto.migrate
    - name: Dialyzer
      run: MIX_ENV=test mix dialyzer
    - name: Credo
      run: MIX_ENV=test mix credo

  build:
    name: Build and test
    needs: lint
    runs-on: self-hosted

    strategy:
      matrix:
        elixir_version: ['1.12', '1.13', '1.14', '1.15', '1.16', '1.17']
        otp_version: ['24', '25', '26', '27']
        phoenix_version: ['1.7.21', '1.6.16']
        phoenix_live_view_version: ['1.0.10', '0.20.17', '0.19.5', '0.18.18', '0.17.14']
        exclude:
          - elixir_version: '1.12'
            otp_version: '25'
          - elixir_version: '1.12'
            otp_version: '26'
          - elixir_version: '1.12'
            otp_version: '27'

          - elixir_version: '1.13'
            otp_version: '26'
          - elixir_version: '1.13'
            otp_version: '27'

          - elixir_version: '1.14'
            otp_version: '27'

          - elixir_version: '1.15'
            otp_version: '27'

          - elixir_version: '1.16'
            otp_version: '27'

          - elixir_version: '1.17'
            otp_version: '24'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir_version }}
        otp-version: ${{ matrix.otp_version }}
      env:
        ImageOS: ubuntu22
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
      env:
        LIVE_VIEW_VERSION: ${{ matrix.phoenix_live_view_version }}
        PHOENIX_VERSION: ${{ matrix.phoenix_version }}
    - name: Create DB
      run: mix do ecto.create, ecto.migrate
    - name: Run tests
      run: mix coveralls.json
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
